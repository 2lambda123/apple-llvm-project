//,,,-- llvm/MC/CAS/MCCASFlatV1.def - MCCASFlatV1 definitions ---*- C++ -*-,,,//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//,,,----------------------------------------------------------------------,,,//
//
// Definitions for MCCASFlatV1
//
//,,,----------------------------------------------------------------------,,,//

#ifdef MCFRAGMENT_NODE_REF

MCFRAGMENT_NODE_REF(MCAlignFragment, FT_Align, mc::align)
MCFRAGMENT_NODE_REF(MCDataFragment, FT_Data, mc::data)
MCFRAGMENT_NODE_REF(MCCompactEncodedInstFragment, FT_CompactEncodedInst, mc::compact_coded_inst)
MCFRAGMENT_NODE_REF(MCFillFragment, FT_Fill, mc::fill)
MCFRAGMENT_NODE_REF(MCNopsFragment, FT_Nops, mc::nops)
MCFRAGMENT_NODE_REF(MCRelaxableFragment, FT_Relaxable, mc::relaxable)
MCFRAGMENT_NODE_REF(MCOrgFragment, FT_Org, mc::org)
MCFRAGMENT_NODE_REF(MCDwarfFragment, FT_Dwarf, mc::dwarf)
MCFRAGMENT_NODE_REF(MCDwarfFrameFragment, FT_DwarfFrame, mc::dwarf_frame)
MCFRAGMENT_NODE_REF(MCLEBFragment, FT_LEB, mc::leb)
MCFRAGMENT_NODE_REF(MCBoundaryAlignFragment, FT_BoundaryAlign, mc::boundary_align)
MCFRAGMENT_NODE_REF(MCSymbolIDFragment, FT_SymbolId, mc::symbol_id)
MCFRAGMENT_NODE_REF(MCCVInlineLinesFragment, FT_CVInlineLines, mc::cv_inline_lines)
MCFRAGMENT_NODE_REF(MCCVDefRangeFragment, FT_CVDefRange, mc::cv_def_range)
MCFRAGMENT_NODE_REF(MCPsudoProbeFragment, FT_PseudoProbe, mc::presudo_pro)
MCFRAGMENT_NODE_REF(MCDummyFragment, FT_Dummy, mc::dummy)

#undef MCFRAGMENT_NODE_REF
